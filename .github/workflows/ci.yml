name: Testing

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        mongodb-version: ['6.0']

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: admin
          MYSQL_DATABASE: ecommerce
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3


      redis:
        image: redis:6.2
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up RabbitMQ
        uses: getong/rabbitmq-action@v1.2
        with:
          rabbitmq version: '3.8.2-management-alpine'
          host port: 5672
          rabbitmq user: 'guest'
          rabbitmq password: 'guest'
          rabbitmq vhost: '/'
          rabbitmq plugins: 'rabbitmq_management rabbitmq_web_mqtt rabbitmq_mqtt rabbitmq_stomp rabbitmq_web_stomp rabbitmq_delayed_message_exchange'

      - name: Start MySQL
        run: |
          docker run -d --name mysql -p 3307:3306 -e MYSQL_ROOT_PASSWORD=admin -e MYSQL_DATABASE=ecommerce mysql:8.0

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}
          mongodb-replica-set: test-rs
          mongodb-port: 27017

      - name: Start RabbitMQ
        run: |
          docker run -d --name rabbitmq -p 5673:5672 -p 15672:15672 rabbitmq:3.8.2-management-alpine

      - name: Start Redis
        run: |
          docker run -d --name redis -p 6380:6379 redis:6.2

      - name: Build and run test with Maven
        run: mvn -B -Dspring.config.location=src/main/resources/application.yml clean package

      - name: Stop and Remove Containers
        run: |
          docker stop mysql mongodb rabbitmq redis
          docker rm mysql mongodb rabbitmq redis
