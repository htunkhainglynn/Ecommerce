name: Testing

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        mongodb-version: ['6.0']

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up RabbitMQ
        uses: getong/rabbitmq-action@v1.2
        with:
          rabbitmq version: '3.8.2-management-alpine'
          host port: 5672
          rabbitmq user: 'guest'
          rabbitmq password: 'guest'
          rabbitmq vhost: '/'

      - name: Set up Redis
        uses: redis-actions/setup-redis@v1.0.0
        with:
          redis-version: '6.2'
          redis-port: 6379

      - name: Set up MySQL
        run: |
          sudo apt-get install -y mysql-client
          mysql -h localhost -u root -padmin -e "CREATE DATABASE ecommerce;"

      - name: Start MySQL
        run: |
          docker run -d --name mysql -p 3307:3306 -e MYSQL_ROOT_PASSWORD=admin -e MYSQL_DATABASE=ecommerce mysql:8.0

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}
          mongodb-replica-set: test-rs
          mongodb-port: 27017

      - name: Start RabbitMQ
        run: |
          docker run -d --name rabbitmq -p 5673:5672 -p 15672:15672 rabbitmq:3.8.2-management-alpine

      - name: Start Redis
        run: |
          docker run -d --name redis -p 6380:6379 redis:6.2

      - name: Enable RabbitMQ Management Plugin
        run: |
          docker exec rabbitmq rabbitmq-plugins enable rabbitmq_management

      - name: Enable RabbitMQ Web MQTT Plugin
        run: |
          docker exec rabbitmq rabbitmq-plugins enable rabbitmq_web_mqtt

      - name: Enable RabbitMQ MQTT Plugin
        run: |
          docker exec rabbitmq rabbitmq-plugins enable rabbitmq_mqtt

      - name: Enable RabbitMQ STOMP Plugin
        run: |
          docker exec rabbitmq rabbitmq-plugins enable rabbitmq_stomp

      - name: Enable RabbitMQ Delayed Message Plugin
        run: |
          docker exec rabbitmq rabbitmq-plugins enable rabbitmq_delayed_message_exchange

      - name: Build with Maven
        run: mvn -B -Dspring.config.location=src/main/resources/application.yml clean package

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

      - name: Run tests with Maven
        run: mvn -B -Dspring.config.location=src/main/resources/application.yml test

      - name: Stop and Remove Containers
        run: |
          docker stop mysql mongodb rabbitmq redis
          docker rm mysql mongodb rabbitmq redis
